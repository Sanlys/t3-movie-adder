import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";

import { api } from "~/utils/api";

export default function Home() {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const torrentInfo = api.qBitTorrent.info.useQuery();
  const addTorrent = api.qBitTorrent.add.useMutation();

  const [magnet, setManget] = useState("")

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">

          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">Add torrents:</p>
            <input name="Magnet link" onChange={(e) => { setManget(e.target.value) }} />
            <button className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
              onClick={() => {
                addTorrent.mutateAsync({magnet: magnet}).then(() => {console.log("Wow ferdig og alt")})
              }}
              disabled={addTorrent.isLoading}
            >
              Add
            </button>
          </div>

          <div className="flex flex-col items-center gap-2">
            {torrentInfo.data ?
              (
                <>
                  <p className="text-2xl text-white">Torrent info</p>
                  {torrentInfo.data.map(torrent => {
                    return (
                      <>
                        <p className="text-1x1 text-white">{torrent.name}</p>
                        <p className="text-1x1 text-white">{(torrent.progress * 100).toFixed(2)}%</p>
                      </>
                    )
                  })}
                </>
              )
              :
              (<p className="text-2xl text-white">Loading torrent info...</p>)
            }
          </div>

          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
